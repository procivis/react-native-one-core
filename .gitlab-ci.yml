image: node:18.17.0-alpine

include:
  - project: "procivis/one/one-operations"
    file:
      - "gitlab/github.gitlab-ci.yml"
      - "gitlab/rules.gitlab-ci.yml"
      - "gitlab/ci-tools.gitlab-ci.yml"
      - "gitlab/bitrise.gitlab-ci.yml"
      - "gitlab/azure.gitlab-ci.yml"

variables:
  NODE_OPTIONS: --max_old_space_size=1536
  DOCKER_DRIVER: overlay2
  YARN_CACHE_FOLDER: "./.yarn/cache"
  YARN_ENABLE_GLOBAL_CACHE: "false"

stages:
  - prepare
  - build
  - publish
  - github
  - sync_with_jira
  - sdk

.rule:only_mr_event:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success

.only_tag:
  rules:
    - if: $CI_COMMIT_TAG

.only_manual_tag:
  rules:
    - if: $CI_COMMIT_TAG
      when: manual

.rule:build_deps:
  rules:
    - !reference [ .rule:only_main_or_tag, rules ]
    - !reference [ .rule:only_mr_event, rules ]

.yarn-cache: &yarn-cache
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
      - ${YARN_CACHE_FOLDER}
    policy: pull

.modules_setup:
  cache:
    <<: *yarn-cache
  before_script:
    - apk add --update --no-cache --virtual .build-deps alpine-sdk libc6-compat gcompat
    - yarn global add node-gyp @mapbox/node-pre-gyp --network-concurrency 1
    - yarn install --frozen-lockfile --network-concurrency 1


build_deps:
  stage: prepare
  extends:
    - .modules_setup
    - .rule:build_deps
  script:
    - ''
  cache:
    policy: pull-push


build:lib:
  stage: build
  extends:
    - .modules_setup
    - .rule:only_mr_event
  script:
    - yarn compile

build:kotlin:
  image: $CI_REGISTRY/procivis/one/one-operations/core-base:1.84.1-0.4
  stage: build
  variables:
    YARN_ENABLE_IMMUTABLE_INSTALLS: true
    NODE_ENV: development
  script:
    - cd example
    - yarn install
    - cd android
    - ./gradlew build
  cache:
    key: $CI_JOB_NAME_SLUG
    policy: pull-push
    when: on_success
    paths:
      - example/android/.gradle
  extends:
    - .rule:only_mr_event

build:swift:
  stage: build
  extends:
    - .bitrise:default
    - .rule:only_mr_event
  variables:
    BITRISE_PROJECT_SLUG: 6ee8c26f-6d7b-4bcb-8ddc-be1ba3cd2687
    BITRISE_WORKFLOW: iOS_RN_Core_LIB

publish:npm:private:
  stage: publish
  script:
    - npm config set @procivis:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - npm config set //${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken ${CI_JOB_TOKEN}
    - npm publish --verbose --access restricted --tag stable
  extends:
    - .modules_setup
    - .only_tag

publish:npm:public:
  stage: publish
  script:
    - npm config set //registry.npmjs.org/:_authToken ${NPMJS_TOKEN}
    - npm publish --verbose --access public
  extends:
    - .modules_setup
    - .only_manual_tag

github:push:
  stage: github
  variables:
    GITHUB_PROJECT: "procivis/react-native-one-core"
    PROJECT: $CI_PROJECT_NAME
  extends:
    - .ci-tool:open_source_release

set_jira_version:
  stage: sync_with_jira
  extends:
    - .ci-tool:set_jira_version

sdk:create_core_binding:
  stage: sdk
  extends:
    - .ci-tool.create-mr
  variables:
    SOURCE_BRANCH: "auto_sdk-$PARENT_PIPELINE_ID"
    REPO_PATH: $CI_PROJECT_DIR
    COMMIT_MESSAGE: "Update core bindings from pipeline $NEW_VERSION"
    MR_TITLE: "Auto SDK: Update Core bindings $CI_COMMIT_REF_NAME"
  before_script:
    - jq --arg version "${NEW_VERSION}" '.version = $version' package.json > package-updated.json
    - mv package-updated.json package.json
    - |
      jq --arg debugUrl "$ANDROID_DEBUG_LINK" \
         --arg debugSha1 "$ANDROID_DEBUG_SHA1" \
         --arg releaseUrl "$ANDROID_RELEASE_LINK" \
         --arg releaseSha1 "$ANDROID_RELEASE_SHA1" \
         --arg iosUrl "$IOS_LINK" \
         --arg iosSha1 "$IOS_SHA1" \
         '.android.debug.url = $debugUrl |
          .android.debug.sha1 = $debugSha1 |
          .android.release.url = $releaseUrl |
          .android.release.sha1 = $releaseSha1 |
          .ios.url = $iosUrl |
          .ios.sha1 = $iosSha1' core-sdk.json > core-sdk-updated.json
    - mv core-sdk-updated.json core-sdk.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline" && $NEW_VERSION && $PARENT_PIPELINE_ID
      when: always

sdk:generate_docs:
  stage: sdk
  image: mcr.microsoft.com/azure-cli:2.63.0
  extends:
    - .azure:upload_to_container
  needs: []
  variables:
    RN_CONTAINER_PATH: "react-native/$PARENT_PIPELINE_ID"
    RN_CONTAINER_DOCS_UPLOAD_PATH: ${AZURE_CONTAINER_NAME}/${RN_CONTAINER_PATH}/docs

  before_script:
    - apk add npm
    - npm install -g yarn
    - yarn install --frozen-lockfile
    - yarn documentation
  script:
    # Upload React native docs
    - az storage blob upload-batch -d ${RN_CONTAINER_DOCS_UPLOAD_PATH} -s docs
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline" && $NEW_VERSION && $PARENT_PIPELINE_ID
      when: always

sdk:project-update:
  stage: sdk
  needs:
    - job: publish:npm:private
  parallel:
    matrix:
      - SDK_PROJECT:
        - one/one-mobile-verifier
        - one/one-wallet
  variables:
    COMMIT_TITLE: "Update One Core bindings to $CI_COMMIT_TAG"
    BRANCH_NAME: "sdk-core-binding-$CI_PIPELINE_ID"
    MR_TITLE: "Update One Core bindings to $CI_COMMIT_TAG"
    NEW_VERSION: $CI_COMMIT_TAG
  trigger:
    project: procivis/$SDK_PROJECT
    branch: main
    strategy: depend
  extends:
    - .only_tag
